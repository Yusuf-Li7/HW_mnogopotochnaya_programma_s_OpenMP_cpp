// 30. Задача для агронома.Председатель дачного кооператива Сидоров
// В.И.получил указание, что в связи с составлением единого земельного
// кадастра, необходимо представить справку о площади занимаемых земель.
// Известно, что территория с запада и востока параллельна меридианам, на
// севере ограничены параллелью, а с юга выходят к реке, описываемой
// функцией f(x).Требуется создать многопоточное приложение, вычисляющее
// площадь угодий методом адаптивной квадратуры.При решении
// использовать парадигму рекурсивного параллелизма.Замечание: кривизну
// Земли из - за малой занимаемой площади не учитывать.

#include "pch.h"
#include <iostream>
#include <cmath>
#include <locale>
#include <thread>
#include <ctime>
#include <stdio.h>
#include <stdlib.h>
#include <iomanip>
#include <limits>
#include "windows.h"
#include <string>
#include <omp.h>

using namespace std;

double f(double x) {
	return abs(sin(x) - 3);
}

double quad(double left, double right, double fleft, double fright, double lrarea, int threads) {
	double mid = (left + right) / 2.0;
	double fmid = f(mid);
	double larea = (fleft + fmid) * (mid - left) / 2.0;
	double rarea = (fmid + fright) * (right - mid) / 2.0;
	if (abs((larea + rarea) - lrarea) > 0.0000001) {
		if (threads > 1) {
			#pragma omp parallel sections
			{
				#pragma omp section
				{
					larea = quad(left, mid, fleft, fmid, larea, threads);
				}
				#pragma omp section
				{
					rarea = quad( mid, right, fmid, fright, larea, threads);
				}
			}
		}
		else {
			larea = quad(left, mid, fleft, fmid, larea, threads);
			rarea = quad(mid, right, fmid, fright, larea, threads);
		}
	}
	return larea + rarea;
}

bool check_number(string s) {
	int i = 0;
	int t = 0;
	if (s[0] == '-')
		i++;
	for (i; i < s.size(); i++) {
		if (s[i] == ',' || s[i] == '.')
			t++;
		else if (s[i] < '0' || '9' < s[i])
			return false;
	}
	if (t > 1)
		return false;
	return true;
}

double get_number(string info) {
	int sign = 1;
	double d = 0;
	double p = 10;
	string s = "";
	do {
		cout << info;
		cin >> s;
	} while (!check_number(s));
	int i = 0;
	if (s[0] == '-')
		sign = -1;
	for (i; i < s.size(); i++) {
		if (s[i] == ',' || s[i] == '.') {
			i++;
			break;
		}
		else
		{
			d *= 10;
			d += (int)(s[i] - '0');
		}
	}
	for (i; i < s.size(); i++) {
		d += (int)(s[i] - '0') / p;
		p *= 10;
	}
	return d;
}

bool check_integer(string s) {
	int n = 0;
	for (int i = 0; i < s.size(); i++) {
		if (s[i] < '0' || '9' < s[i])
			return false;
		else {
			n *= 10;
			n += (int)(s[i] - '0');
		}
	}
	if (n > 0)
		return true;
	return false;
}

int get_integer(string info) {
	int n = 0;
	string s = "";
	do {
		cout << info;
		cin >> s;
	} while (!check_integer(s));

	for (int i = 0; i < s.size(); i++) {
		n *= 10;
		n += (int)(s[i] - '0');
	}
	return n;
}

int main()
{
	setlocale(LC_CTYPE, "Russian");
	double a = 0, b = 0;
	cout << "f(x) = sin(x) - 3\nВведите левую и правую границы а и b соотвественно\n";
	a = get_number("a = ");
	b = get_number("b = ");
	int tr = get_integer("Введите натуральное число - количество ядер на вашем компьютере\n");
	if (a > b)
		swap(a, b);
	double s = (f(a) + f(b)) * (b - a) * 0.5;
	double ans = quad(a, b, f(a), f(b), s, tr);
	cout << "\nПлощадь = " << ans << "\n";
	return 0;
}
